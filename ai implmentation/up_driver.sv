//% this code generated by Ai "github cobilot" ^-^

// This class represents an upper layer driver
class up_driver;

    // Interface to the upper layer
    virtual upper_layer_if vif;

    // Transaction object for the upper layer
    upper_layer_tr tr;

    // Mailbox for communication between monitor and scoreboard
    mailbox #(upper_layer_tr) DriverGeneratorMailbox;

    // Event to signal when driving is done
    event driveDone;

    // Constructor
    function new(virtual upper_layer_if vif, mailbox #(upper_layer_tr) DriverGeneratorMailbox, event doneEvent);
        this.vif = vif;
        this.DriverGeneratorMailbox = DriverGeneratorMailbox;
        this.driveDone = doneEvent;
    endfunction

    // Main task that runs forever
    task run();
        forever begin
            // Get the transaction from the mailbox
            DriverGeneratorMailbox.get(tr);

            // Wait for the next clock edge
            @(posedge vif.clk);

            // If data is valid, drive the data and signal that driving is done
            if (/*vif.dataValidIn ==*/ 1) begin
                vif.transport_layer_data_out = tr.T_Data;
                -> driveDone;
            end

//! we should add here more if we add more var in monitor (phase , gen_speed)

        end
    endtask
endclass